// User Model
const UserSchema = new mongoose.Schema({
    username: { 
      type: String, 
      required: true, 
      unique: true,
      trim: true
    },
    email: { 
      type: String, 
      required: true, 
      unique: true,
      match: [/.+\@.+\..+/, 'Please enter a valid email address']
    },
    password: { 
      type: String, 
      required: true,
      minlength: 6
    },
    createdAt: {
      type: Date,
      default: Date.now
    }
  });
  
  // Item Model (can represent store, restaurant, product, book, etc.)
  const ItemSchema = new mongoose.Schema({
    name: { type: String, required: true },
    description: { type: String, required: true },
    category: { type: String, required: true },
    image: { type: String },
    // Can add more fields based on what type of items are being reviewed
    createdAt: { type: Date, default: Date.now }
  });
  
  // Review Model
  const ReviewSchema = new mongoose.Schema({
    user: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: 'User',
      required: true
    },
    item: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: 'Item',
      required: true
    },
    text: { type: String, required: true },
    rating: { 
      type: Number, 
      required: true,
      min: 1,
      max: 5
    },
    createdAt: { type: Date, default: Date.now },
    updatedAt: { type: Date, default: Date.now }
  });
  
  // Comment Model
  const CommentSchema = new mongoose.Schema({
    user: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: 'User',
      required: true
    },
    review: { 
      type: mongoose.Schema.Types.ObjectId, 
      ref: 'Review',
      required: true
    },
    text: { type: String, required: true },
    createdAt: { type: Date, default: Date.now },
    updatedAt: { type: Date, default: Date.now }
  });
